language: android
android:
  components:
    # The BuildTools version used by your project (make sure it's exactly the same as in the build.gradle)
    - build-tools-29.0.3
    # The SDK version used to compile your project
    - android-29
    # The SDK version used by the system image
    - android-22
    # The system image, to run an emulator during the tests
    - sys-img-armeabi-v7a-android-22

env:
  global:
    - BUILD_TOOLS=29.0.3
    - COMPILE_SDK_VERSION=29
    - ABI=x86_64
    - ADB_INSTALL_TIMEOUT=8
    - JDK="1.8"
    
  matrix:
    # - API=15 ABI=x86 EMU_CHANNEL="--channel=4" # ERROR: failed to start emulator
    # - API=16 ABI=x86 AUDIO=-no-audio # ERROR: fails with com.android.ddmlib.InstallException: Unknown failure: Error: Unknown option: -d
    # API=17 ABI=x86 # Works
    # API=18 ABI=x86 # Works
    # API=19 ABI=x86 # Works
    # API 20 was Android Wear only
    # API=21 ABI=x86_64 # Works
    - API=22 ABI=x86_64 # Works
    # API=23 ABI=x86_64 # Works
    # API=24 ABI=x86_64 # Works
    # API=25 ABI=x86_64 # Works
    # API=26 ABI=x86_64 # Works
    # API=27 ABI=x86_64 # Works
    # API=28 ABI=x86_64 # Works
    # API=29 ABI=x86_64 # Works

before_install:
  # This section may run on all platforms, and may run for unit tests or for coverage finalization
  # It should not make assumptions about os platform or desired tool installation

  # Set up JDK 8 for Android SDK - Java is universally needed: codacy, unit tests, emulators
  - curl "${GRAVIS}.install-jdk-travis.sh" --output ~/.install-jdk-travis.sh
  - export TARGET_JDK="${JDK}"
  - JDK="1.8"
 

before_script:
  # Emulator Management: Create, Start and Wait
  - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82
  # Set up Code Climate test reporter
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
script:
  - ./gradlew build connectedCheck jacocoTestReport
after_script:
  # Report test coverage to Code Climate
  - export JACOCO_SOURCE_PATH=app/src/main/java/
  - ./cc-test-reporter format-coverage ./app/build/reports/coverage/debug/report.xml --input-type jacoco
  - ./cc-test-reporter upload-coverage
